data <- read.csv("features-old.csv")
count(data$truePosition==1)
sum(data$truePosition==1)
sum(data$truePosition==2)
sum(data$truePosition==3)
sum(data$truePosition==4)
sum(data$truePosition==5)
sum(data$truePosition==6)
sum(data$truePosition==7)
sum(data$truePosition==0)
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
library(bnlearn)
data <- read.csv("features-old.csv")
data
data$truePosition <- as.factor(data$truePosition)
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
data <- read.csv("features-old.csv")
data
data$truePosition <- as.factor(data$truePosition)
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
preds
dataTest$truePosition
data <- read.csv("features.csv")
data
data$truePosition <- as.factor(data$truePosition)
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
data <- read.csv("features.csv")
data
data$truePosition <- as.factor(data$truePosition)
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
data <- read.csv("features.csv")
data
data$truePosition <- as.factor(data$truePosition)
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
data <- read.csv("features.csv")
data
data$truePosition <- as.factor(data$truePosition)
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
predict(nb, dataTest)
dataTest$truePosition
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
data <- read.csv("features.csv")
data
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
preds = predict(nb, dataTest)
predict(nb, dataTest)
dataTest$truePosition
sum(dataTest$truePosition==3)
nrow(dataTest$truePosition)
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
