#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old1.csv")
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old1.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old2.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old3.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
dataTrain = data[seq(1,nrow(data),2),]
dataTest = data[seq(2,nrow(data),2),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
dt
summary(dt)
summry(tree)
summary(tree)
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
tree
plot(tree)
text(tree)
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
plot(tree)
summary(tree)
predict(tree, dataTest, type="class")
summary(nb)
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old3.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
summary(tree)
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old2.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
summary(tree)
predict(tree, dataTest, type="class")
dataTest$truePosition
summary(nb)
predict(nb, dataTest)
nb
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old1.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old2.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features-old3.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
#import libraries
library(vegan)
library(survival)
library(bnlearn)
library(dplyr)
library(ggplot2)
library(lattice)
library(mice)
library(tableone)
library(caret)
library(rpart)
library(e1071)
# reading an old one actually to directly study results
data <- read.csv("features.csv")
data
# Combine truth position 3 (insular) and 4 (parietal) due to the small size of the
# insular cortex and their close position in brain
data$truePosition <- ifelse(data$truePosition==4, 3 , data$truePosition)
data$truePosition <- as.factor(data$truePosition)
# Remoce Ids to avoid overfitting
data <- data[-c(which( colnames(data)=="id"))]
#dataTrain = data[seq(1,nrow(data),2),]
#dataTest = data[seq(2,nrow(data),2),]
dataTrain = data[seq(1,25,1),]
dataTest = data[seq(26,nrow(data),1),]
############## Naive Bayes   ##############
nb = naiveBayes(truePosition ~ . , dataTrain)
preds = predict(nb, dataTest)
bayesAccuracy <- sum(predict(nb, dataTest)==dataTest$truePosition) / nrow(dataTest)
############## Decision Tree ##############
tree <- rpart(truePosition~ .,
data=dataTrain,
method="class")
dtAccuracy <- (sum(predict(tree, dataTest, type="class")==dataTest$truePosition)) / nrow(dataTest)
############## Accuracy comparison  ##############
n <- nrow(dataTest)
dtAccuracyInCI <-  toString(dtAccuracy)
bayesAccuracyInCI <- toString(bayesAccuracy)
accuracyComparisonMatrix <- matrix(c(dtAccuracyInCI,bayesAccuracyInCI),ncol=2,byrow=TRUE)
colnames(accuracyComparisonMatrix) <- c("Decision Tree", "Naive Bayes")
rownames(accuracyComparisonMatrix) <- c("Accuracy")
accuracyComparisonTable <- as.table(accuracyComparisonMatrix)
accuracyComparisonTable
